/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package gestionaproductos;

import java.util.InputMismatchException;
import java.util.regex.Pattern;
import javax.swing.JOptionPane;
import javax.swing.JTextField;
import javax.swing.table.DefaultTableModel;
import javax.swing.text.AttributeSet;
import javax.swing.text.BadLocationException;
import javax.swing.text.Document;
import javax.swing.text.DocumentFilter;
import javax.swing.text.PlainDocument;

/**
 *
 * @author adam
 */
public class GestorProductos extends javax.swing.JFrame {

    private DefaultTableModel modelo = new DefaultTableModel();

    /**
     * Creates new form GestorProductos
     */
    public GestorProductos() {
        initComponents();
        armarCabecera();
//        javax.swing.JTextField txtPrecio = new CampoNumerico(20);
//        txtPrecio = crearCampoNumerico();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lblCabecera = new javax.swing.JLabel();
        comboCategoria = new javax.swing.JComboBox<>();
        lblCategoria = new javax.swing.JLabel();
        btnAgregar = new javax.swing.JButton();
        lblNombre = new javax.swing.JLabel();
        lblPrecio = new javax.swing.JLabel();
        txtNombreProducto = new javax.swing.JTextField();
        txtPrecio = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        tablaProductos = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        lblCabecera.setFont(new java.awt.Font("sansserif", 1, 18)); // NOI18N
        lblCabecera.setText("Gestión de Productos");

        comboCategoria.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "", "electrónica", "ropa", "alimentos" }));

        lblCategoria.setText("Categoría:");

        btnAgregar.setText("Agregar Producto");
        btnAgregar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAgregarActionPerformed(evt);
            }
        });

        lblNombre.setText("Nombre del Producto:");

        lblPrecio.setText("Precio:");

        txtPrecio.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtPrecioActionPerformed(evt);
            }
        });
        txtPrecio.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtPrecioKeyTyped(evt);
            }
        });

        tablaProductos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "Nombre", "Categoría", "Precio"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.Double.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tablaProductos.setColumnSelectionAllowed(true);
        jScrollPane1.setViewportView(tablaProductos);
        tablaProductos.getColumnModel().getSelectionModel().setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(39, 39, 39)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(70, 70, 70)
                        .addComponent(lblCategoria)
                        .addGap(18, 18, 18)
                        .addComponent(comboCategoria, javax.swing.GroupLayout.PREFERRED_SIZE, 191, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(lblPrecio)
                            .addComponent(lblNombre))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(txtNombreProducto, javax.swing.GroupLayout.PREFERRED_SIZE, 189, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtPrecio, javax.swing.GroupLayout.PREFERRED_SIZE, 189, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnAgregar, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(78, 78, 78))
            .addGroup(layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 706, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(245, 245, 245)
                        .addComponent(lblCabecera, javax.swing.GroupLayout.PREFERRED_SIZE, 203, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(26, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addComponent(lblCabecera)
                .addGap(26, 26, 26)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 303, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 75, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(comboCategoria, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblCategoria))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblNombre)
                    .addComponent(txtNombreProducto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtPrecio, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblPrecio)
                    .addComponent(btnAgregar))
                .addGap(52, 52, 52))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txtPrecioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtPrecioActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtPrecioActionPerformed

    private void txtPrecioKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtPrecioKeyTyped
        char caracter = evt.getKeyChar();
        char separadorDecimal = '.';
        String txtActual;

        if (caracter == separadorDecimal) {
            txtActual = txtPrecio.getText();
            for (int i = 0; i < txtActual.length(); i++) {
                if (txtActual.charAt(i) == separadorDecimal) {
                    evt.consume();
                    return;
                }
            }

            return;
        }
        
        
        if (!Character.isDigit(caracter)) {
            evt.consume();
        }
        
        txtActual = txtPrecio.getText();
        int posDecimal = -1;
        int i = 0;
        while (i < txtActual.length() && posDecimal < 0){
             if(txtActual.charAt(i) == separadorDecimal){
                 posDecimal = i;
             }
            i++;
        }
        if(posDecimal < 0){
            return;
        }
        if(txtPrecio.getCaretPosition() < posDecimal){
            return;
        }
        if(txtPrecio.getCaretPosition() - posDecimal > 2){
            evt.consume();
        }
        
    }//GEN-LAST:event_txtPrecioKeyTyped

    private void btnAgregarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAgregarActionPerformed
        String nombreProducto = txtNombreProducto.getText();
        String categoria = (String) comboCategoria.getSelectedItem();

        if (nombreProducto.isBlank()
                || categoria.isBlank()
                || txtPrecio.getText().isBlank()) {
            JOptionPane.showMessageDialog(this, "Tenés que ingresar datos en todos los campos");
            return;
        }
        double precio = Double.parseDouble(txtPrecio.getText());
        if (precio <= 0) {
            JOptionPane.showMessageDialog(this, "El precio tiene que ser mayor que cero");
        }

        cargarDatos(new Producto(
                nombreProducto,
                categoria,
                precio)
        );

        resetearCampos();
    }//GEN-LAST:event_btnAgregarActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(GestorProductos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(GestorProductos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(GestorProductos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(GestorProductos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new GestorProductos().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAgregar;
    private javax.swing.JComboBox<String> comboCategoria;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblCabecera;
    private javax.swing.JLabel lblCategoria;
    private javax.swing.JLabel lblNombre;
    private javax.swing.JLabel lblPrecio;
    private javax.swing.JTable tablaProductos;
    private javax.swing.JTextField txtNombreProducto;
    private javax.swing.JTextField txtPrecio;
    // End of variables declaration//GEN-END:variables

    private void armarCabecera() {
        modelo.addColumn("Nombre");
        modelo.addColumn("Categoría");
        modelo.addColumn("Precio");
        tablaProductos.setModel(modelo);
    }

    private void cargarDatos(Producto producto) {
        modelo.addRow(new Object[]{
            producto.getNombreProducto(),
            producto.getCategoria(),
            producto.getPrecio()}
        );

    }

    private void resetearCampos() {
        txtNombreProducto.setText("");
        comboCategoria.setSelectedIndex(0);
        txtPrecio.setText("");
    }

    // FIXME: Regex filtro para tratar el caso de validar datos cuando copiamos y pegamos numeros
    private static JTextField crearCampoNumerico() {
        JTextField campoNumerico = new JTextField(20);
        PlainDocument documento = new PlainDocument();
        documento.setDocumentFilter(new DocumentFilter() {
            private Pattern pattern = Pattern.compile("\\d*\\.?\\d*");

            @Override
            public void insertString(FilterBypass fb, int offset, String string, AttributeSet attr) throws BadLocationException {
                if (string.matches("^\\d+(\\.\\d{1,2})?$")) {
                    super.insertString(fb, offset, string, attr);
                }
            }

            @Override
            public void replace(FilterBypass fb, int offset, int length, String text, AttributeSet attrs) throws BadLocationException {
                if (text.matches("^\\d+(\\.\\d{1,2})?$*")) {
                    super.replace(fb, offset, length, text, attrs);
                }
            }
        });

        campoNumerico.addKeyListener(new java.awt.event.KeyAdapter() {
            @Override
            public void keyTyped(java.awt.event.KeyEvent evt) {
                staticTxtPrecioKeyTyped(evt, campoNumerico.getText());
            }
        });

        campoNumerico.setDocument(documento);
        return campoNumerico;
    }

    private static void staticTxtPrecioKeyTyped(java.awt.event.KeyEvent evt, String txtActual) {
        char caracter = evt.getKeyChar();

        if (caracter == '.') {
            for (int i = 0; i < txtActual.length(); i++) {
                if (txtActual.charAt(i) == '.') {
                    evt.consume();
                    return;
                }
            }

            return;
        }

        if (!Character.isDigit(caracter)) {
            evt.consume();
        }
    }

    // Ejemplo de JTextField.java para poner un campo en mayuscula, incluso si copiamos y pegamos el texto
    public class UpperCaseField extends JTextField {

        public UpperCaseField(int cols) {
            super(cols);
        }

        protected Document createDefaultModel() {
            return new UpperCaseDocument();
        }

        static class UpperCaseDocument extends PlainDocument {

            public void insertString(int offs, String str, AttributeSet a)
                    throws BadLocationException {

                if (str == null) {
                    return;
                }
                char[] upper = str.toCharArray();
                for (int i = 0; i < upper.length; i++){
                    upper[i] = Character.toUpperCase(upper[i]);
                }
                super.insertString(offs, new String(upper), a);
            }
        }
    }
    // Adaptar UpperCaseField ejemplo de JTextField.java a un campo numerico
    public class CampoNumerico extends JTextField {

        public CampoNumerico(int cols) {
            super(cols);
        }

        protected Document createDefaultModel() {
            return new DocumentoNumerico();
        }

        static class DocumentoNumerico extends PlainDocument {

            public void insertString(int offs, String str, AttributeSet a)
                    throws BadLocationException, InputMismatchException {

                if (str == null) {
                    return;
                }
                char separadorDecimal = '.';
                int contDecimal = 0;
                boolean esNumero = true;
                
                for (int i = 0; i < str.length(); i++) {
                    if (!Character.isDigit(str.charAt(i))){
                        if (str.charAt(i) == separadorDecimal) {
                            contDecimal++;
                            if(contDecimal > 1){
                                esNumero = false;
                                break;
                            }
                        }else{
                            esNumero = false;
                            break;
                        }
                    }
                }
                if(esNumero){
                    char[] numChars = str.toCharArray();
                    super.insertString(offs, new String(numChars), a);
                }else{
                    super.insertString(offs, new String(), a);
                    throw new InputMismatchException("Tiene que ser un numero");
                }
            }
        }
    }
}
